/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: nthmn.exe (https://sketchfab.com/nthmn.exe)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/geometrynodes-scifi-sphere-4d2538e7e1834daab9842e0d8c020bff
Title: GeometryNodes SciFi Sphere
*/

import { useRef, useEffect } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'

export function SphereSciFi(props) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/models/sphereSciFi.glb')
  const { actions, names } = useAnimations(animations, group)


  useEffect(() => {
    actions[names[0]].reset().setEffectiveTimeScale(.5).play()
  })

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}>
          <group name="root">
            <group name="GLTF_SceneRootNode" rotation={[Math.PI / 2, 0, 0]}>
              <group name="Plane_1">
                <mesh
                  name="Object_4"
                  castShadow
                  receiveShadow
                  geometry={nodes.Object_4.geometry}
                  material={materials.Material}
                />
                <group name="Plane001_0" scale={0.974}>
                  <mesh
                    name="Object_6"
                    castShadow
                    receiveShadow
                    geometry={nodes.Object_6.geometry}
                    material={materials.material_0}
                  />
                </group>
              </group>
              <group name="Plane002_2" rotation={[0.927, -0.497, 0.252]} scale={0.704}>
                <mesh
                  name="Object_8"
                  castShadow
                  receiveShadow
                  geometry={nodes.Object_8.geometry}
                  material={materials.Material}
                />
              </group>
              <group name="Icosphere_3" scale={0.587}>
                <mesh
                  name="Object_10"
                  castShadow
                  receiveShadow
                  geometry={nodes.Object_10.geometry}
                  material={materials.emission}
                />
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/models/sphereSciFi.glb')
